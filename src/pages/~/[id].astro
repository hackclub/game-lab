---
import '../../global.css'
import { firestore, getGame, getSession } from '../../lib/game-saving/account'
import Editor from '../../components/big-interactive-pages/editor'
import StandardHead from '../../components/standard-head.astro'
import { signal } from '@preact/signals'
import type { PersistenceState } from '../../lib/state'
import MobileUnsupported from '../../components/popups-etc/mobile-unsupported'
import { mobileUserAgent } from '../../lib/utils/mobile'

const session = await getSession(Astro.cookies)
if (!session) return Astro.redirect(`/login?to=${Astro.request.url}`, 302)

const game = await getGame(Astro.params.id!)
if (!game || game.ownerId !== session.user.id) return Astro.redirect('/404', 302)

const fileRegexp = /^.*\/(.+)-(\d+)\.md$/

let tutorial: string[] | undefined;
let tutorialIndex: number | undefined;
if (game.tutorialName) {
	const files = await Astro.glob('/games/*.md')
		
		tutorial = files.filter(file => {
			const regexedFile = file.file.match(fileRegexp)
			return regexedFile && regexedFile[1] === game.tutorialName
		})
		?.map(md => md.compiledContent())
	tutorialIndex = game.tutorialIndex
}

let _persistenceState: PersistenceState
if (session.session.full) {
	if (game.unprotected) {
		await firestore.collection('games').doc(game.id).update({ unprotected: false })
		game.unprotected = false
	}
	if (Astro.cookies.get('sprigTempGame').value === game.id)
		Astro.cookies.delete('sprigTempGame', { path: '/' })

	_persistenceState = {
		kind: 'PERSISTED',
		session,
		cloudSaveState: 'SAVED',
		game,
		tutorial,
		tutorialIndex,
		stale: false
	}

} else {
	if (!game.unprotected) return Astro.redirect(`/login?to=${Astro.request.url}`, 302)
	if (game.ownerId !== session.user.id) return Astro.redirect('/404', 302)

	_persistenceState = {
		kind: 'PERSISTED',
		session,
		cloudSaveState: 'SAVED',
		game,
		tutorial,
		tutorialIndex,
		stale: false
	}
}

const persistenceState = signal<PersistenceState>(_persistenceState)
const isMobile = mobileUserAgent(Astro.request.headers.get('user-agent') ?? '')
---

<html lang='en'>
	<head>
		<StandardHead title='Editor' />
	</head>
	<body>
		<Editor
			client:load
			persistenceState={persistenceState}
			cookies={{
				outputAreaSize: Astro.cookies.get('outputAreaSize').number(),
				hideHelp: Astro.cookies.get('hideHelp').boolean()
			}}
		/>
		{isMobile ? <MobileUnsupported /> : null}
	</body>
</html>