 
const box = "s"
const trap1="d"
const trap2 = "t"
const player2 = "v"
const melody =tune`
215.8273381294964: C4~215.8273381294964 + C5-215.8273381294964 + D4/215.8273381294964,
215.8273381294964: D4^215.8273381294964 + B4-215.8273381294964,
215.8273381294964: C4~215.8273381294964 + A4-215.8273381294964 + D4/215.8273381294964,
215.8273381294964: D4^215.8273381294964 + C5-215.8273381294964,
215.8273381294964: C4~215.8273381294964 + B4-215.8273381294964 + D4/215.8273381294964,
215.8273381294964: D4^215.8273381294964 + A4-215.8273381294964,
215.8273381294964: C4~215.8273381294964 + C5-215.8273381294964 + D4/215.8273381294964,
215.8273381294964: D4^215.8273381294964 + B4-215.8273381294964,
215.8273381294964: C4~215.8273381294964 + G4-215.8273381294964 + D4/215.8273381294964,
215.8273381294964: D4^215.8273381294964 + B4-215.8273381294964,
215.8273381294964: C4~215.8273381294964 + A4-215.8273381294964 + D4/215.8273381294964,
215.8273381294964: D4^215.8273381294964 + F4-215.8273381294964,
215.8273381294964: C4~215.8273381294964 + D4/215.8273381294964,
215.8273381294964: D4^215.8273381294964 + G4-215.8273381294964,
215.8273381294964: C4~215.8273381294964 + A4-215.8273381294964 + D4/215.8273381294964,
215.8273381294964: D4^215.8273381294964,
215.8273381294964: C4~215.8273381294964 + A4-215.8273381294964 + D4/215.8273381294964,
215.8273381294964: D4^215.8273381294964 + B4-215.8273381294964,
215.8273381294964: C4~215.8273381294964 + D4/215.8273381294964,
215.8273381294964: B4-215.8273381294964 + D4^215.8273381294964,
215.8273381294964: C5-215.8273381294964 + C4~215.8273381294964 + D4/215.8273381294964,
215.8273381294964: D4^215.8273381294964,
215.8273381294964: D5-215.8273381294964 + C4~215.8273381294964 + D4/215.8273381294964,
215.8273381294964: E5-215.8273381294964 + D4^215.8273381294964,
215.8273381294964: D4/215.8273381294964 + G5-215.8273381294964,
215.8273381294964: C4~215.8273381294964 + F5-215.8273381294964,
215.8273381294964: D4/215.8273381294964 + D5-215.8273381294964,
215.8273381294964: D4^215.8273381294964 + C5-215.8273381294964,
215.8273381294964: C4~215.8273381294964 + G4-215.8273381294964,
215.8273381294964: D4/215.8273381294964 + A4-215.8273381294964,
215.8273381294964: D4^215.8273381294964 + F4-215.8273381294964,
215.8273381294964: C4~215.8273381294964 + E4-215.8273381294964 + D4/215.8273381294964`;
const moveup=tune`
500: E5/500,
15500`;
const movedown=tune`
500: D4/500,
15500`;
const movesides=tune`
500: B4/500,
15500`;
const player = "p";
const floor1="f";
const goal="g";
const goal2 ="y"
const lock="l";
const key="k";
const key2="o";
const lock2="i";
const background="r";
const wall="w"
const pole="m"
const trap3="u"
const lamp ="n"
const poleTop ="a"
let level = 0;
const levels = [
map`
.a..a......a......a.a.a..a.a........
.a..a......a......a.a.a..a.a........
.a..a......a......a.a.a..a.a........
.a..a......m......a.a.a..m.a........
.m..a......n......a.m.a..n.a........
.n..a.............a.n.a....a........
....a.............m...a....a........
....m.............n...a....a........
....n.................m....m........
......................n....n........
....................................
....................................
....................................
....................................
....................................
....................................
....................................
....................................
....................................
....................................
....................................
....................................
....................................
....................................
....................................
....................................
g..................................y
.w................................w.
pw................................wv`,
map`
y..wa.a.aaw.....t...
iwwwa.a.maw..w..w.dd
...wa.a.naw..w.dw...
...wm.a..aw..w..wdd.
...wn.m..aw..wd.w...
...w..n..aw..w..w.dd
...w.....mw..wd.w...
...w....dnw..w..wdd.
..w...ddd.u..w.dw...
..wdddd...w.kw..w.dd
uuw.d.d.wwwwwwd.w...
....d...wgwv.d..wdd.
..d...d.w.w..dd.w...
p.d.d.d.l.t.....w..o`,
map`
ya..a..a..ututtadd.a..d.
.m..a..a..utuduatu.a..d.
.n..a..a..duudtmud.mddd.
v...a..m..dutuun.u.nt..k
....m..n..uutdt..d....d.
....n.....tt.utd...d..d.
..........tut.td..ut..d.
..........wwwwwwwwwwwwww
..........wo............
..........wwwwwwwwwwwwwl
p.........w....d....d...
wwwwww....wd...d....udd.
gi..tt.......u..d.t.....
wwwwww......d.....d.d...`,
map`
..................uo
.u.uuuuuuuuuuuuuuuud
.u.d...d.....d..d...
.u.d.d.d.ddd.d......
pu.d.d...d...d..d...
.u...d.d.d...d.d....
wwwwwwwwww.....d...u
....dddd.wwwwwwwwlw.
....dg.d.tut.....t.k
....d.yi.ttt...t.t.t
....dddd.uuu...t.t.t
.......d.tuu...t.t.t
.......d.tuu...t.t.t
.......d.ttt...t.t.t
.......d.tut.v.t...t`,
map`
.v.d....d...u......
.p...d....t...u.u..
uwwwwwwwwwwwwwwwwtl
...............gw..
..wwwwwwwwwwwwwwwd.
..w.m...um...u.....
..w.n.u.un.u.u...d.
iww...u....u.......
.yw.wwwwwwwwwwwww.d
tuw.d...d...d.t.w..
tuw.d.d.d.d.d.dkw..
ttw...d...d...d.wd.
utw.wwwwwwwwwwwww..
utw.d...d..........
dtw.d.d.d.d.d.....d
ttw.t.t.t.t.d......
tuw.d.d.d.d.d......
ttw...d...d.d....d.
dtwwwwwwwwww.......
....d....t.w.......
....dt.d.t.wwwwww..
..d.dt.d.t...twow.d
..t..t.d.t.t..u.w..
..d....d...t.twww..
..wwwwwwwwwwwuuuwd.
d...d...d...d.d.d..
..d...d...d...d...d
uuttuuttuuuuutuuutu
tttt..tttuuuutttttt`,
map`
gw...wtw.w...u...d....wtw...w...
vw.w.w.w...w.d.d.d.dw...w.w.w.w.
.w.w.....w.w.d.t.d.dwdw...w.w.wp
...w.w.wuw.w...d....w.wuw.w...wy`
 
];

 
setLegend(
  [poleTop,bitmap`
.......00.......
.......00.......
.......00.......
.......00.......
.......00.......
.......00.......
.......00.......
.......00.......
.......00.......
.......00.......
.......00.......
.......00.......
.......00.......
.......00.......
.......00.......
.......00.......`],
   [box,bitmap`
0000000000000000
0CCCCCCCCCCCCCC0
0000000000000000
0CCCCCCCCCCCCCC0
0CCCCCC000000000
0000000CCCCCCCC0
0CCCCCCCCCCCCCC0
0CCCCCCCC0000000
0000000000CCCCC0
0CCCCCCCCCCCCCC0
0000000000000000
0CCCCCCCCCCCCCC0
00000CC00000C000
0CCCC00CCCC00CC0
0CCCCCCCCCCCCCC0
0000000000000000`],
[player, bitmap`
................
....CCCCCCCC....
....CDDDDDDC....
....D00DD00D....
....DDDDDDDD....
....DDD00DDD....
....DDDDD7DD....
......5DD5......
...DD5555D55D...
...D555DD5D5D...
......D555......
......55D5......
......FFFF......
......F..F......
......F..D......
......D..D......`],
  [player2, bitmap`
....CCCCCCCC....
....CFFFFFFC....
....F00FF00F....
....FFFFFFFF....
....FF0000FF....
....FFFCCFFF....
......7FF7......
......7777......
..F77F777F777F..
..FF77F777777F..
......77F7......
......7777......
......7777......
......CCCC......
......C..C......
......C..C......`],
  [goal,bitmap`
................
................
................
................
................
.......88888....
...88888888888..
.88888H80888888.
880888H808888888
8008888800888888
8080888880888888
8888888880088888
H888888H8808888H
88888888880088HH
.880008888888888
..8880000888H888`],
  [goal2,bitmap`
......LLL.......
....LLLLLLL.....
....L.....L.....
....L777..L.....
....L77777L.....
....L77777L.....
....L77777L.....
....L77777L.....
....L77777L.....
....L77777L.....
....L77777L.....
....L77777L.....
....L77777L.....
....L77777L.....
....L77777L.....
....LLLLLLL.....`],
  [key,bitmap`
...LLLLLLLLLL...
...L0LLLLLLLL...
...0L0LLLL0LL...
...LLLLLL0LLL...
...LLLLLLL0LL...
.......DC.......
.......CD.......
.......DC.......
.......CD.......
.......DC.......
.......CD.......
.......CC.......
.......CC.......
.......CC.......
.......CC.......
.......CC.......`],
  [wall,bitmap`
...LLLLLLLLLL...
..LLLLLLLLLLLL..
.L0000LL0LL000L.
LL0LL0LL0LL0L0LL
LL0L00LL0LL000LL
LL00LLLL0LL0LLLL
LL0L0LLL0LL0LLLL
LL0LL0LL0LL0LLLL
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL`],
  [trap1,bitmap`
................
................
................
................
................
................
................
.......L........
......LLL.......
.....LLLLL......
....LLLLLLL.....
...LLLLLLLLL....
..LLLLLLLLLLL...
.LLLLLLLLLLLLL..
LLLLLLLLLLLLLLL.
000000000000000.`],
  [trap2,bitmap`
................
................
................
..CCCCCCCCC888..
..CCCCCCCCCH88..
..DCDDDDCDD80H..
..DCDDDDDDDCDD..
..DDDDDDDDDDDD..
..D00DDDDDD00D..
..D00DDDDDD00D..
..DDDDDDDDDDDD..
..D0200202020D..
..D0000000000D..
..D0000000000D..
..D0200202020D..
..DDDDDDDDDDDD..`],
  [trap3,bitmap`
....LLL..LLL....
....L.L..L.L....
.....LLLLLL.....
.....L...3L.....
.....L3.33L.....
.....L3333L.....
.....L3333L.....
.....L3333L.....
.....L3333L.....
.....L3333L.....
.....L3333L.....
.....LLLLLL.....
.......LL.......
.......LL.......
.......LL.......
.......LL.......`],
  [key2,bitmap`
................
................
...666666666....
...66.....66....
...6.......6....
...6.......6....
...66.....66....
...666666666....
.....66666......
......666.......
.......6........
.......6........
.......66.......
.......666......
................
................`],
  [lock,bitmap`
......CCCC......
.....CCCCC......
....CCCCCC..C...
....CCCCCCC.C...
....CCCCCCCCCCC.
....C00000C...C.
..C.C00000C.....
.CCCC06060C.....
.C..C00000C..C..
....C00000CCCC..
....C00000C.C...
....CCCCCCC.....
....CCCCCCC.....
....CCCCCCC.....
....CCCCCCC.....
.CCCCCCCCCCCCCC.`],
  [lock2,bitmap`
...CCCCCCCCCCC..
.CCLLLLLLLLLLCC.
CCLL6666L6666LLC
CCL6L666L666L6LC
CCLLLLLLLLLLLLLC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
C66CCCCCCCCCCCCC
C66CCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC`],
  [floor1,bitmap`
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL
LLLLLLLLLLLLLLLL`],
  [pole,bitmap`
.......00.......
.......00.......
.......00.......
.......00.......
.......00.......
.......00.......
.......00.......
.......00.......
.......00.......
.......00.......
.......00.......
.......00.......
.......00.......
.......00.......
.......00.......
....00000000....`],
  [background,bitmap`
L111111111111111
1111111111111111
1111111111111111
11111111111L1111
111111LL11111111
1111111111111111
1111L11111111111
111111111111L111
1L11111111111111
1111111111111111
1111L11111111111
1111111111L11111
1111111111111111
1111111111111111
1111111111111111
11111111L1111111`],
  [lamp,bitmap`
...0........0...
...0........0...
...0...93...0...
...00.9693.00...
...00.9663.00...
...0003639000...
....00000000....
................
................
................
................
................
................
................
................
................`] 
 )
setSolids([player,player2,wall,lock,lock2,floor1,box,poleTop,lamp,pole])
setBackground(background);
setInterval(()=>{},500)
setMap(levels[0])

setPushables({
	[ player ]: [box],
  [box]: [box],
  [player2]: [box]
})
function start(){
  addText("w and i=up",{x:1, y:6, color:color`6`});
  addText("s and k=down",{x:1, y:8, color:color`6`});
  addText("a and j=left",{x:1, y:10, color:color`6`});
  addText("d and l=right",{x:1, y:12, color:color`6`});
addText("A zombie & human",{ x: 2, y: 0, color: color`H` });
addText("team up to survive",{x:1, y:2, color:color`H`});
addText("THE APOCALYPSE!",{x:3, y:4, color:color`D`});
addText("press k,j,l,i",{x:3, y:14, color:color`6`});
}
//player1 move left
 onInput("a", () => {
  getFirst(player).x -= 1;
   playTune(movesides)
 })


//player1 move up
  onInput("w", () => {
 getFirst(player).y-=1;
  playTune(moveup)})
          
//player1 move right
onInput("d", () => {
  getFirst(player).x += 1; 
  playTune(movesides)
});
onInput("s", () => {
  getFirst(player).y += 1; 
  playTune(movesides)
})

//player2 move left
onInput("j", () => {
  getFirst(player2).x -= 1;
  playTune(movesides)
});
onInput("k", () => {
  getFirst(player2).y += 1; 
  playTune(movesides)
  
})
//player2 move up
onInput("i", () => {
  getFirst(player2).y -= 1;
  playTune(moveup)
})
//player2 move right
onInput("l", () => {
  getFirst(player2).x += 1; 
  playTune(movesides)
});
 start()
afterInput(() =>{
 clearText()
  addText("Put zombie on brain ",{x:0, y:0, color:color`6`});
  addText("DON'T hit spikes or",{x:0, y:2, color:color`2`});
  addText("syringes!!!",{x:5, y:4, color:color`2`});
  
 addText("Put human on water ",{x:0, y:7, color:color`6`});
  addText("DON'T hit spikes or",{x:0, y:9, color:color`2`});
  addText("Zombies!!!",{x:5, y:11, color:color`2`});
  
  const goalsCovered =  tilesWith (player,goal)
const goal2Covered =  tilesWith (player2,goal2)
  const trap1Covered = tilesWith (player,trap1).concat(tilesWith(player2,trap1))
  const trap2Covered = tilesWith (player2,trap2)
  const trap3Covered = tilesWith (player,trap3)
  const keysTaken = tilesWith(player, key).concat(tilesWith(player2,key))
  const key2Taken = tilesWith(player, key2).concat(tilesWith(player2,key2))
  const currentLevel = levels[level];
  if(level>0){clearText()}
  if (goalsCovered.length >= 1 && goal2Covered.length >= 1) {
    level = level + 1;
    const currentLevel = levels[level];
    if (currentLevel !== undefined) {
      clearText()
      setMap(currentLevel);
      playTune(melody,1)
    } else {
  addText("you win!", { y: 4, color: color`4` });
}
  }
   if (trap1Covered.length > 0) {
        setMap(levels[level])}
  
  if (trap2Covered.length > 0) {
        setMap(levels[level])}
  
  if (trap3Covered.length > 0) {
        setMap(levels[level])}
  
if (keysTaken.length >= 1) {
getFirst(lock).remove();
getFirst(key).remove();
}
  if (key2Taken.length >= 1) {
getFirst(lock2).remove();
getFirst(key2).remove();
  }
});
 