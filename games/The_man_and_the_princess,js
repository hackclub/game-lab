/*
@title: getting_started
@author: leo, edits
@tags: ['tutorial']
@addedOn: 2022-07-26

Check the tutorial in the bottom right, the run button is in the top right.
Make sure to remix this tutorial if you want to save your progress!
*/

// define the sprites in our game
const player = "p";
const girl = "b";
const house = "g";
const enemy = "w";

// assign bitmap art to each sprite
setLegend(
  [ player, bitmap`
................
.......00000....
.......00.00....
.......0.0.0....
.......00000....
.........0......
.........0......
....00000000000.
....0...000...0.
....0....0....0.
....0.0000000.0.
....0.0.....0.0.
......0.....0...
................
................
................`],
  [ girl, bitmap`
........000000..
......00000000..
......00.00000..
......0.0.0.00..
......00000.00..
........0...00..
......00000.00..
......0.0.0.00..
......00000.....
........0.......
........0.......
.......000......
......0...0.....
.....0.....0....
................
................`],
  [ house, bitmap`
................
......000.......
.....00000......
....0000000.....
....0000000.000.
....000000000000
....0.....000000
....0.....000000
.00.0.....000000
00000.....00...0
00000.....00...0
0..00.....00...0
0000000000000000
................
................
................`],
  [ enemy, bitmap`
0000000000000000
0000000000000000
0000000000000000
1000330000330001
0100330000330010
0010000000000100
0001000000001000
0000100000010000
00000LLLLLL00000
330L000LL0000033
330LL0LLL0000033
3300LLLL00000033
3330000000000333
3330000000000333
3330000000000333
3330000000000333`]
);

// create game levels
let level = 0; // this tracks the level we are on
const levels = [
  map`
.www....
.www..b.
p.ww....
.......g`,
  map`
www...
wwwbb.
www.w.
pgg...`,
  map`
pwwwwwg
.b..gw.
wwb.b..
wwgww..`,
  map`
wwwwwwww
p.wg....
wg....b.
wwbww..w
ww....ww
ww..wwww`,
  map`
..g......ww..g.
b.bgbbbb.w..w..
gg...wwwww.....
....ww.w..b....
..p.w....w.....
.w..gg......w..`,
  map`
.g...www...
.ww......b.
.ww...b.w.w
pg.www.ww.w
w.ww...w..w
wwww.....b.
w.g...w....`
];

// set the map displayed to the current level
const currentLevel = levels[level];
setMap(currentLevel);

setSolids([ player, girl, enemy ]); // other sprites cannot go inside of these sprites

// allow certain sprites to push certain other sprites
setPushables({
  [player]: [girl], [girl]: [girl]
});

// inputs for player movement control
onInput("s", () => {
  getFirst(player).y += 1; // positive y is downwards
});

onInput("d", () => {
  getFirst(player).x += 1;
});
onInput("a", () => {
  getFirst(player).x -= 1;
});
onInput("w", () => {
  getFirst(player).y -= 1; // positive y is downwards
});
// input to reset level
onInput("j", () => {
  const currentLevel = levels[level]; // get the original map of the level

  // make sure the level exists before we load it
  if (currentLevel !== undefined) {
    clearText("");
    setMap(currentLevel);
  }
});

// these get run after every input
afterInput(() => {
  // count the number of tiles with girls
  const targetNumber = tilesWith(girl).length;
  
  // count the number of tiles with girls and housees
  const numberCovered = tilesWith(girl, house).length;
  // if the number of girls is the same as the number of girls covered
  // all girls are covered and we can go to the next level
  if (numberCovered === targetNumber) {
    // increase the current level number
    level = level + 1;

    const currentLevel = levels[level];

    // make sure the level exists and if so set the map
    // otherwise, we have finished the last level, there is no level
    // after the last level
    if (currentLevel !== undefined) {
      setMap(currentLevel);
    } else {
      addText("you win!", { y: 4, color: color`3` });
    }
  }
});
