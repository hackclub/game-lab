/*
@title: Dodger
@tags: ['simulation']
@author: Chaste
@addedOn: 2024-05-28
*/

const player = "p";
const obstacle = "o";

setLegend(
  [player, bitmap`
................
................
....444444......
...44444444.....
..4444444444....
..4444444444....
..4444444444....
..4444444444....
..4444444444....
..4444444444....
..4444444444....
..4444444444....
..4444444444....
..4444444444....
................
................`],
  [obstacle, bitmap`
................
................
....333333......
...33333333.....
..3333333333....
..3333333333....
..3333333333....
..3333333333....
..3333333333....
..3333333333....
..3333333333....
..3333333333....
..3333333333....
..3333333333....
................
................`]
);

setMap(map`
.....
.....
.....
.....
.....
.....
p....`);

let score = 0;
let gameOver = false;
let obstacleInterval = 1000;

function movePlayer(dx, dy) {
  let p = getFirst(player);
  if (p) {
    p.x += dx;
    p.y += dy;
    if (p.x < 0) p.x = 0;
    if (p.x > 4) p.x = 4;
  }
}

function spawnObstacle() {
  let x = Math.floor(Math.random() * 5);
  addSprite(x, 0, obstacle);
}

function moveObstacles() {
  let obstacles = getAll(obstacle);
  for (let obs of obstacles) {
    obs.y += 1;
    if (obs.y > 6) {
      clearTile(obs.x, obs.y);
      score++;
      addText(`Score: ${score}`, { x: 0, y: 0 });
      if (score % 5 === 0 && obstacleInterval > 200) {
        obstacleInterval -= 100;
      }
    } else if (obs.y == 6) {
      clearTile(obs.x, obs.y);
    } else if (obs.y == 5 && getTile(obs.x, obs.y + 1).some(sprite => sprite.type === player)) {
      // Game Over
      addText("Game Over!", { x: 5, y: 7 });
      gameOver = true;
      return;  // End the function if the game is over
    }
  }
}

function resetGame() {
  clearText();
  clearTile(0, 0, 4, 6);
  setMap(map`
.....
.....
.....
.....
.....
.....
p....`);
  score = 0;
  gameOver = false;
  obstacleInterval = 1000;
  gameLoop();
}

function gameLoop() {
  if (!gameOver) {
    moveObstacles();
    spawnObstacle();
    setTimeout(gameLoop, obstacleInterval);
  }
}

onInput("a", () => movePlayer(-1, 0));
onInput("d", () => movePlayer(1, 0));

resetGame();
