/*
@title: minceraft
@author: suhas
*/

const player = "p";
const tile = "t";
const lava = "l";
let died = false;
const emerald = "e";
let direction = "right"
const portal = "o";
const netherSky = "s";
let alreadySetLevelOne = false;
let alreadyWon = false;
let l2ec = 0;

setLegend(
  [ player, bitmap`
................
................
.......000......
.......0.0......
......0..0......
......0...0.0...
....0003.30.0...
....0.0...000...
....0.05550.....
......0...0.....
.....0....0.....
.....0...0......
......000.......
......0.0.......
.....00.00......
................`],
  [ tile, bitmap`
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD
DDDDDDDDDDDDDDDD
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC`],
  [ lava, bitmap`
................
................
9999999999999999
9999999999999999
9999999999999999
9999999999999999
9999999999999999
9999999999999999
9999999999999999
9999999999999999
9999999999999999
9999999999999999
9999999999999999
9999999999999999
9999999999999999
9999999999999999`],
  ["b", bitmap`
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000
0000000000000000`],
  [emerald, bitmap`
................
................
.......44.......
......4444......
.....444444.....
....44444444....
....44444444....
....44444444....
....44444444....
....44444444....
.....444444.....
......4444......
.......44.......
................
................
................`],
  [ portal, bitmap`
...0000000000...
...0000000000...
...00HHHHHH00...
...00HHHHHH00...
...00HHHHHH00...
...00HHHHHH00...
...00HHHHHH00...
...00HHHHHH00...
...00HHHHHH00...
...00HHHHHH00...
...00HHHHHH00...
...00HHHHHH00...
...00HHHHHH00...
...00HHHHHH00...
...0000000000...
...0000000000...`],
  [ netherSky, bitmap`
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCC9CCCCC9CC9CC
CCCCCCCCCCCCCCCC
CCCCCC9CCCC9CCCC
CCCCCCCCCCCCCCCC
CCCCC9CCCCCCCCCC
CCCCCCCC9CCCCCCC
CC9CCCCCCCCC9CCC
CCCCCC9CCCCCCCCC
C9CCCCCCC9CCCCCC
CCCCCCCCCCCCCC9C
CCCCC9CCCCCCCC9C
CCCCCCCCCCCCCCCC
C9CCCCCC9CCCCCCC
CCCCCCCCCCCCCCCC` ]
);

setSolids([player, tile]);

let level = 0;
const levels = [
  map`
..........
..........
..........
.....e....
p.........
ttttttlltt`,
  map`
sssssssssssssssssss
sssssssssssssssssss
sssssssssssssesssss
sssssssssssssssssss
sssssssesssssssssss
essssssssssstttssss
sssssssssssssssssst
ssssssttttsssssssss
sspssssssssssssssss
ttttttlllllllllllll`
]

setMap(levels[level]);

setPushables({
  [ player ]: [],
});

onInput("d", () => {
  getFirst(player).x += 1
});

onInput("w", () => {
  const pl = getFirst(player);
  pl.y -= 2;
})

onInput("a", () => {
  getFirst(player).x -= 1;
})

afterInput(() => {
  if (tilesWith(emerald, player).length >= 1 && level == 0) {
    getFirst(emerald).remove()
    addSprite(8, 4, portal)
  }

  if (tilesWith(emerald, player).length >= 1 && level == 1) {
    getFirst(emerald).remove()
    l2ec++;
    if (l2ec == 3) { addSprite(18, 5, portal) }
  }

  if (alreadySetLevelOne == false && tilesWith(player, portal).length >= 1 && level == 0) {
    alreadySetLevelOne = true
    level++;
    setMap(levels[level]);
  }


  if (alreadyWon == false && tilesWith(player, portal).length >= 1 && level == 1) {
    alreadyWon = true;
    setMap(map`
..............................
..............................
..............................
..............................
..bb....b....bbbb....b...bb...
...b....b...bb..b....b....b...
...bb...b...b...bb...b....b...
....b...b...b....b...b....b...
.....bbbb...b...bb...b....b...
......bb....b...b....b...b....
.......b.....bbb.....bbbbb....
.......b......................
.......b......................
.......b......................
..............................
.............b................
...b.........b.bbbbb...b....b.
...b.....b...b...b.....bb...b.
...b.....b...b...b.....bbb..b.
...bb...b....b...b.....b.bb.b.
....b...bb..bb...b.....b..b.b.
....bb.b.bb.b....b.....b..bbb.
.....bbb..bb...bbbb....b...bb.
..............................`)
  }
});

function gravity() {
  if (died || getAll("p").length == 0) return
  const pl = getFirst("p")
  if (getTile(pl.x, pl.y - 1)[0] != tile) {
    pl.y += 1;
  }
  setTimeout(gravity, 1000)
}

function emeraldStuff() {
  if (died || getAll(emerald).length == 0) return
  const em = getFirst("e")
  if (em.x == 0) { direction = "right" }
  if (em.x == 8 && level == 0) { direction = "left" }
  if (direction == "right") { em.x++; }
  if (direction == "left") { em.x--; }
  setTimeout(emeraldStuff, 1500);
}

function death() {
  const pl = getFirst("p")
  if (tilesWith(lava, player).length >= 1) {
    setMap(map`
...................................
...b...b...bb......b...............
...bb.bb.bbbbb..b..b...............
....bbb..b...b..b..b...............
....bb...b...b..b..b...............
.....b...b...b..b..b...............
.....b...bb.bb..bb.b...............
.....b....bbb....bbb...............
..................b................
...................................
...................................
...................................
..bbb....bbbbb..bbbbb....bbbb......
..b..b.....b....b........b..bb.....
..b..bb....b....b........b...bb....
..b...b....b....bbbbbb...b...bb....
..b..bb....b....b........b..bb.....
..bbbb....bbbb..bbbbbb...bbbb......
...................................
...................................
...................................
...................................`)
    died = true;
    clearInterval(death)
  }
  setInterval(death, 2000)
}
gravity()
death()
emeraldStuff()
