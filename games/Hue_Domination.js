/*
First time? Check out the tutorial game:
https://sprig.hackclub.com/gallery/getting_started

@title: Hue Domination
@author: Gus Ruben
@tags: [2-Player, Multiplayer, PVP]
@addedOn: 2024-00-00
*/

// scales up a bitmap by 2x
function doubleBitmap(bitmap) {
    const rows = bitmap.split('\n');
    const scaledRows = [];

    for (const row of rows) {
        // horizontal
        const scaledRow = row.split('').map(char => char.repeat(2)).join('');


        // vertical
        scaledRows.push(scaledRow);
        scaledRows.push(scaledRow);
    }

    return scaledRows.join('\n');
}

// the title screen image needs to be split into 16x16 chunks
function splitBitmap(bitmap) {
    const rows = bitmap.trim().split('\n')
    const chunks = [];
    const chunkRows = rows.length / 16;
    const chunkCols = rows[0].length / 16;
  
    for (let i = 0; i < chunkRows; i++) {
        for (let j = 0; j < chunkCols; j++) {
            let chunk = [];
            for (let r = 0; r < 16; r++) {
                const rowIndex = i * 16 + r;
                const startCol = j * 16;
                const endCol = startCol + 16;
                
                chunk.push(rows[rowIndex].slice(startCol, endCol));
            }
            chunks.push(chunk.join('\n'));
        }
    }

    return chunks;
}

// dimensions need to be a multiple of 16
const titleImage = bitmap`
............................................00000...............
.................000000000000.......000000000...00..............
.................0..........000000000.........3..0..............
................00.333..333...........333333.333.0..............
................0..333.3333..33...33..333333333..0.......77.....
...............00.333..3333.3333..333.33333333..00......7777....
..............00..33333333..33333.333..333...3.00......777777...
..33..........0..333333333..3333..333..33333...0.......7777777..
.3333.........0.3333333333..333...333..3333333.0......77777777..
33333.........0..333333333..333...333..3333333.0......777777.7..
33333.........00..333..333..3333.3333..3333....0......117777....
333333.........00.3333.3333..3333333..33333333.0.....CCC17.7.7..
3.3311..........0..333.3333..3333333..33333333.0.....CCCC..7....
3.31CCC.........00.333..333..333333..3333333.3.0.00000CC........
..3.CCC..........0.3.3...33..3.3.33..33.3.33.3.000...0C.........
.....CC00000000000.3.3.........3..3...3......3.....7.000........
3....C00.......................3..................77...00.......
....000..77..777...3.777....77.3..77..3..777.....77777..00......
...00...777..777....77777..777....777...77777...7777777..00.....
...0..7.777.7777...777777..777.3..777..7777777..77777777..0.....
...0.77777..7777..7777777..777....777..77777777.777777777.0.....
...0..777777777...777..777..777...77..7777.7777.7777..77..0.....
...00..77777777..7777..777..777...77..777..7777.7777......0.....
....00.77777777..777...777..777..777..777..7777.7777..77..0.....
.....0.77777777..7777777777.77777777..777..7777.7777.7777.0.....
.....0.777..777..7777777777..777777..777777777..77777777..0.....
.....0.7777.7777.77777.7777..777777..777777777..77777777.00.....
.....0..777.7777.777.7..7777..7777...77777777..777777777.0......
.....00.777..777..77....77777.777....7.777777...7.77777..0......
......0.7.7..77...7.......77..7......7...77.......7777..00......
......0.7....7......00000.7.....0000........7.000.7....00.......
......0......7.000000...0...00000..00000000...0.0.7..7.0........
......000000.7.0........0.7.0.............00000.0.7....0........
...........0.7.0........0...0...................0...0000........
...........0.7.0........00000...................00000...........
...........0...0................................................
...........0.7.0................................................
...........0...0................................................
...........00000................................................
................................................................
................................................................
................................................................
................................................................
................................................................
................................................................
................................................................
................................................................
................................................................`
const titleChunks = splitBitmap(doubleBitmap(titleImage))
const titleChars = "AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz".split("")
let titleLegend = titleChunks.map((chunk, index) => [titleChars[index], chunk]);

setLegend(...titleLegend)
setMap(map`
..........
.AaBbCcDd.
.EeFfGgHh.
.IiJjKkLl.
.MmNnOoPp.
.QqRrSsTt.
.UuVvWwXx.
..........`)


const textColors = [color`3`, color`7`]
let currentTextColor = 1;
addText("Press any button", {x: 2, y: 13, color: textColors[0]})
const blinkingTextInterval = setInterval(() => {
  currentTextColor = 1 - currentTextColor;
  
  clearText();
  addText("Press any button", {x: 2, y: 13, color: textColors[currentTextColor]})
}, 1000)


let gameStarted = false;
"wasdijkl".split("").forEach(key => {
  onInput(key, () => {
    if (!gameStarted) startGame()
  })
})


const playerRedUp = "1"
const playerRedDown = "2"
const playerRedLeft = "3"
const playerRedRight = "4"
const playerBlueUp = "5"
const playerBlueDown = "6"
const playerBlueLeft = "7"
const playerBlueRight = "8"
const paintRed = "Y"
const paintRedSpecial1 = "z"
const paintRedSpecial2 = "9"
const paintRedSpecial3 = "0"
const paintBlue = "y"
const paintBlueSpecial1 = "`"
const paintBlueSpecial2 = "~"
const paintBlueSpecial3 = "-"
const background = "Z"


let canvas;

function startGame() {
  clearInterval(blinkingTextInterval)
  clearText()
  setTimeout(() => gameStarted = true, 10)

  setLegend(
  [playerRedUp, bitmap`
................
..000000000000..
..066663666360..
..063333333330..
..06333333333000
..033333333330.0
..000000000000.0
...............0
.......000000000
.......0........
......0000......
......0660......
......0630......
......0330......
......0330.....C
......0000......` ],
  [playerRedDown, bitmap`
......0000......
......0660......
......0630......
......0330......
......0330......
......0000......
.......0........
.......000000000
...............0
..000000000000.0
..066663666360.0
..06333333333000
..063333333330..
..033333333330..
..000000000000..
................` ],
  [playerRedLeft, bitmap`
................
................
.000000.........
.066630.........
.063330.........
.063330.........
.063330...000000
.033330.00066630
.063330.0.063330
.063330.0.000000
.033330.0.......
.033330.0.......
.033330.0.......
.000000.0.......
....0...0.......
....00000.......` ],
  [playerRedRight, bitmap`
.......00000....
.......0...0....
.......0.000000.
.......0.066630.
.......0.063330.
.......0.063330.
000000.0.063330.
066630.0.033330.
06333000.063330.
000000...063330.
.........033330.
.........033330.
.........033330.
.........000000.
................
................` ],
  [playerBlueUp, bitmap`
................
..000000000000..
..077775777570..
..075555555550..
..07555555555000
..055555555550.0
..000000000000.0
...............0
.......000000000
.......0........
......0000......
......0770......
......0750......
......0550......
......0550......
......0000......` ],
  [playerBlueDown, bitmap`
......0000......
......0770......
......0750......
......0550......
......0550......
......0000......
.......0........
.......000000000
...............0
..000000000000.0
..077775777570.0
..07555555555000
..075555555550..
..055555555550..
..000000000000..
................` ],
  [playerBlueLeft, bitmap`
................
................
.000000.........
.077750.........
.075550.........
.075550.........
.075550...000000
.055550.00077750
.075550.0.075550
.075550.0.000000
.055550.0.......
.055550.0.......
.055550.0.......
.000000.0.......
....0...0.......
....00000.......` ],
  [playerBlueRight, bitmap`
.......00000....
.......0...0....
.......0.000000.
.......0.077750.
.......0.075550.
.......0.075550.
000000.0.075550.
077750.0.055550.
07555000.075550.
000000...075550.
.........055550.
.........055550.
.........055550.
.........000000.
................
................` ],
  [background, bitmap`
2121212122222222
1212121222222222
2121212122222222
1212121222222222
2121212122222222
1212121222222222
2121212122222222
1212121222222222
2222222212121212
2222222221212121
2222222212121212
2222222221212121
2222222212121212
2222222221212121
2222222212121212
2222222221212121` ],
  [paintRed, bitmap`
3333333333333333
3333333333333333
3333333333333333
3333333333333333
3333333333333333
3333333333333333
3333333333333333
3333333333333333
3333333333333333
3333333333333333
3333333333333333
3333333333333333
3333333333333333
3333333333333333
3333333333333333
3333333333333333` ],
  [paintRedSpecial1, bitmap`
3333333333333333
3399933333333333
3999933333333333
3999333333333333
3393333333333333
3333333333333333
3333333333333333
3333333333333993
3333333333339993
3333333333999993
3333333999999993
3333339999999993
3333333999999933
3333333399999333
3333333333333333
3333333333333333` ],
  [paintRedSpecial2, bitmap`
3333333333333333
3333333333333333
3333333399999333
3333333399999933
3333333999999933
3333399999999933
3333339999993333
3333333333333333
3333333333333333
3333333333333333
3333333333993333
3333333333999333
3993333333399333
3933333333333333
3333333333333333
3333333333333333` ],
  [paintRedSpecial3, bitmap`
3333333333333333
3333333333333333
3339999333333333
3339999993333333
3399999999333333
3999933333333333
3999333399993333
3999333999999333
3993333999999933
3333333333999933
3333333333399933
3333333333999933
3333333333999333
3333333339999333
3333333399333333
3333333333333333` ],
  [paintBlue, bitmap`
5555555555555555
5555555555555555
5555555555555555
5555555555555555
5555555555555555
5555555555555555
5555555555555555
5555555555555555
5555555555555555
5555555555555555
5555555555555555
5555555555555555
5555555555555555
5555555555555555
5555555555555555
5555555555555555` ],
  [paintBlueSpecial1, bitmap`
5555555555555555
5555555555555555
5555577757777555
5557777777775555
5557777777775555
5557777777555555
5557757775555555
5557555555555577
5555555555555777
5555555555555775
5555555555555555
5555555577555555
5555777777755555
5557777777555555
5555555555555555
5555555555555555` ],
  [paintBlueSpecial2, bitmap`
5555555555555555
5557557555555555
5557777775555555
5777777777555555
5577777777555555
5577777777555555
5557777555555555
5555575555555555
5555555555555775
5555555555555775
5555555555555555
5577555555555555
5577555555555555
5575555555555555
5555555555555555
5555555555555555` ],
  [paintBlueSpecial3, bitmap`
5555555555555555
5555555555555555
5555555555555555
5555555555555555
5555555775755555
5555555777777755
5555555577777775
5555555557777775
5555555777777775
5555555577777555
5555555577755555
5577555555555555
5777555555555555
5777555555555555
5575555555555555
5555555555555555` ],
  ...titleLegend
)
  
  
  // setBackground(background)
  setMap(map`
.........6
..........
..........
..........
..........
..........
..........
1.........`)
  
  // Create an array the size of the game board, to keep track of paint
  canvas = []
  for (let i = 0; i < 10; i++) {
	canvas.push(Array(8).fill(""))
  }


  // the canvas should start off painted where the players spawn
  canvas[9][0] = paintBlue
  canvas[0][7] = paintRed
  addSprite(9, 0, paintBlue)
  addSprite(0, 7, paintRed)
}

const spritesRed = ["1", "2", "3", "4"]
const controlsRed = {
  "w": {
    func: p => p.y -= 1,
    type: "1",
  },
  "s": {
    func: p => p.y += 1,
    type: "2",
  },
  "a": {
    func: p => p.x -= 1,
    type: "3",
  },
  "d": {
    func: p => p.x += 1,
    type: "4",
  },
}

const spritesBlue = ["5", "6", "7", "8"]
const controlsBlue = {
  "i": {
    func: p => p.y -= 1,
    type: "5",
  },
  "k": {
    func: p => p.y += 1,
    type: "6",
  },
  "j": {
    func: p => p.x -= 1,
    type: "7",
  },
  "l": {
    func: p => p.x += 1,
    type: "8",
  },
}

setSolids([...spritesRed, ...spritesBlue]);

[
  [spritesBlue, controlsBlue, paintBlue, [paintBlueSpecial1,paintBlueSpecial2,paintBlueSpecial3]],
  [spritesRed, controlsRed, paintRed, [paintRedSpecial1,paintRedSpecial2,paintRedSpecial3]]
].forEach(data => {
  const [sprites, controls, paintColor, specialPaint] = data;

  Object.keys(controls).forEach(key => {
    onInput(key, () => {
      if (!gameStarted) return
      
      let player;
      // find the player, regardless of what directional sprite is in use right now
      for (const sprite of sprites) {
        console.log(sprite)
        player = getFirst(sprite);
        if (player) break;
      }

      // move the player
      controls[key].func(player);
      player.type = controls[key].type;

      // color the canvas at that spot
      let currentColor = canvas[player.x][player.y]
      if (currentColor == "") {
        addSprite(player.x, player.y, paintColor)
      } else {
        for (let sprite of getTile(player.x, player.y)) {
          if (sprite.type == currentColor) {
            
            // random chance to pick a special paint sprite
            if (Math.random() < 0.35) {
              paintSprite = specialPaint[Math.floor(Math.random() * specialPaint.length)]
            } else {
              paintSprite = paintColor
            }
            
            sprite.type = paintSprite
          }
        }
      }
      canvas[player.x][player.y] = paintColor
    })
  })
})



